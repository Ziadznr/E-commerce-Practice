class Strings {
    constructor() { }
    ;
    /**
     * 字符串格式化(用双大括号作为标识)
     * @param tpl 模板
     * @param data 数据
     * @returns 绑定数据后的字符串
     */
    format(tpl, data) {
        return tpl.replace(/{{(.+?)}}/g, (_, content) => {
            const ret = data[content], _typeof = typeof ret;
            if (_typeof === 'number' && !isNaN(ret)) {
                return ret;
            }
            if (_typeof === 'boolean') {
                return ret;
            }
            return ret || '';
        });
    }
    /**
     * 生成uuid
     * @returns uuid;
     */
    uuid() {
        return Array.from({
            length: 36
        }).map((_, i) => {
            switch (i) {
                case 8:
                case 13:
                case 18:
                case 23:
                    return '-';
                default:
                    return Math.random().toString(16).slice(-1);
            }
        }).join('');
    }
    /**
     * 驼峰格式
     * @param input home-handler
     * @returns homeHandler
     */
    camelCase(input) {
        return input.toLowerCase().replace(/-(.)/g, function (_, group1) {
            return group1.toUpperCase();
        });
    }
}
export default new Strings();
