const regexs = {
    cardid: /(^[1-9]\d{5}(18|19|([23]\d))\d{2}(0[1-9]|1[012])(0[1-9]|[12]\d|3[01])\d{3}(\d|[xX])$)|(^[1-9]\d{7}(0[1-9]|1[012])(0[1-9]|[12]\d|3[01])\d{3}$)/,
    tel: /^1[3|4|5|6|7|8|9]\d{9}$/,
    lpn: /^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使][A-HJ-NP-Z][A-HJ-NP-Z0-9]{4,5}[A-HJ-NP-Z0-9港澳学领]$/,
    htmlcomment: /<!--(.|[\r\n])*?-->/g, // html注释,
};
/**
 * 简单校验车牌号
 * @param lpnNo 车牌号
 * @returns 是否合法
 */
function checkLPN(lpnNo) {
    return regexs.lpn.test(lpnNo);
}
/**
 * 简单校验手机号码
 * @param telNo 手机号码
 * @returns 是否合法
 */
function checkTelNo(telNo) {
    return regexs.tel.test(telNo);
}
/**
 * 校验身份证号码是否合法
 * @param cardid 身份证号码
 * @returns 是否合法
 */
function checkCardId(cardid) {
    if ([15, 18].indexOf(cardid.trim().length) === -1) {
        return false;
    }
    if (!regexs.cardid.test(cardid)) {
        return false;
    }
    const city = ["11", "12", "13", "14", "15", "21", "22", "23", "31", "32", "33", "34", "35", "36",
        "37", "41", "42", "43", "44", "45", "46", "50", "51", "52", "53", "54", "61", "62", "63",
        "64", "65", "71", "81", "82", "91"];
    if (15 === cardid.length) {
        return city.indexOf(cardid.substring(0, 2)) !== -1;
    }
    const ary = Array.from({ length: 18 }, (_element, index) => index);
    cardid = cardid.replace(/x$/i, "a");
    ary.sort((x, y) => y - x);
    // ary.reverse();
    const num = ary.reduce((preVal, curVal) => {
        return preVal + (Math.pow(2, curVal) % 11) * parseInt(cardid.charAt(17 - curVal), 11);
    }, 0);
    return num % 11 === 1;
}
/**
 * 通过身份证号码获取生日信息
 * @param cardid 身份证号码
 * @param separator 分隔符(默认'-')
 * @returns 格式化的生日信息
 */
function getBirthday(cardid, separator = '-') {
    if (!checkCardId(cardid)) {
        console.log('不合法的身份证号码');
        return '';
    }
    if (cardid.length === 15) {
        cardid = convertCard(cardid);
    }
    return cardid.substring(6, 14).replace(/(\d{4})(\d{2})/, `$1${separator}$2${separator}`);
}
function convertCard(cardid) {
    cardid = cardid.replace(/(\d{6})/, '$119');
    const ary = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3], getnum = Array.from(cardid).reduce((preVal, curVal, index) => {
        return preVal + Number(curVal) * ary[index % 10];
    }, 0), mod = getnum % 11, str = "10X98765432";
    return cardid + str.charAt(mod);
}
export { checkCardId, getBirthday, checkLPN, checkTelNo };
