/// <reference types="veat/veat" />
/**
 * 主要思想和代码的某些部分（例如绘制可变宽度贝塞尔曲线）
 * http://corner.squareup.com/2012/07/smoother-signatures.html
 *
 * 使用三次贝塞尔曲线实现插值
 *
 * 贝塞尔曲线近似长度的算法
 * http://www.lemoda.net/maths/bezier-length/index.html
 */
import { SignatureEventTarget } from './event';
export default class Signature extends SignatureEventTarget {
    private canvas;
    dotSize: number;
    minWidth: number;
    maxWidth: number;
    penColor: string;
    minDistance: number;
    velocityFilterWeight: number;
    backgroundColor: string;
    throttle: number;
    private _ctx;
    private _drawningStroke;
    private _isEmpty;
    private _lastPoints;
    private _data;
    private _lastVelocity;
    private _lastWidth;
    private _strokeMoveUpdate;
    constructor(canvas: HTMLCanvasElement, options?: SignatureOptions);
    clear(): void;
    undo(): void;
    fromDataURL(dataUrl: string, options?: {
        ratio?: number;
        width?: number;
        height?: number;
        xOffset?: number;
        yOffset?: number;
    }): Promise<void>;
    toDataURL(type?: ImgMime, quality?: number): string;
    on(): void;
    off(): void;
    isEmpty(): boolean;
    fromData(pointGroups: PointGroup[], { clear }?: FromDataOptions): void;
    toData(): PointGroup[];
    toSize(): number;
    private _resizeCanvas;
    private _handleMouseDown;
    private _handleMouseMove;
    private _handleMouseUp;
    private _handleTouchStart;
    private _handleTouchMove;
    private _handleTouchEnd;
    private _handlePointerStart;
    private _handlePointerMove;
    private _handlePointerEnd;
    private _strokeBegin;
    private _strokeUpdate;
    private _strokeEnd;
    private _handlePointerEvents;
    private _handleMouseEvents;
    private _handleTouchEvents;
    private _reset;
    private _createPoint;
    private _addPoint;
    private _calculateCurveWidths;
    private _strokeWidth;
    private _drawCurveSegment;
    private _drawCurve;
    private _drawDot;
    private _fromData;
    private _toSVG;
}
